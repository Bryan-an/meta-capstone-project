import { type NextRequest } from 'next/server';
import { updateSession } from '@/lib/supabase/middleware';

/**
 * Next.js middleware function for handling Supabase session management.
 *
 * This middleware intercepts incoming requests and calls the `updateSession`
 * utility function to refresh the user's session cookie if necessary.
 * This ensures that the session state is up-to-date for server-side
 * rendering and operations.
 *
 * @param request - The incoming Next.js request object.
 * @returns The response generated by `updateSession`, which might include
 * updated session cookies.
 *
 * @see {@link updateSession}
 */
export async function middleware(request: NextRequest) {
  // update user's auth session
  return await updateSession(request);
}

/**
 * Configuration object for the Next.js middleware.
 *
 * The `matcher` property specifies the paths on which this middleware
 * should run. It's configured to run on all paths except for static
 * assets (`_next/static`), image optimization files (`_next/image`),
 * the favicon, and common image file extensions.
 */
export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     */
    '/((?!_next/static|_next/image|favicon.ico|.*\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',
  ],
};
